- hosts: localhost
  tasks:
  - name: remove old trust information on IPA1DEMO
    shell: |
      echo Secret123 | kinit admin
      ipa trust-del ipa2demo.test
      ipa idrange-del IPA2DEMO.TEST_id_range
    delegate_to: m1.ipa1demo.test
    ignore_errors: yes
  - name: remove old trust information on IPA2DEMO
    shell: |
      echo Secret123 | kinit admin
      ipa trust-del ipa1demo.test
      ipa idrange-del IPA1DEMO.TEST_id_range
    delegate_to: m2.ipa2demo.test
    ignore_errors: yes
  - name: collect domain information for IPA1DEMO.TEST
    shell: |
      echo Secret123 | kinit admin
      ipa idrange-show IPA1DEMO.TEST_id_range --raw && \
      ipa trustconfig-show --raw && \
      (ipa dnsrecord-show ipa1demo.test m1 --raw | head -2)
    delegate_to: m1.ipa1demo.test
    register: "r1"
  - set_fact:
      r1_info: "{{ r1_info|d({})|combine({_key: _val}) }}"
    loop: "{{ r1.stdout_lines }}"
    vars:
      _list: "{{ item.split(':')|map('trim') }}"
      _key: "{{ _list.0}}"
      _val: "{{ _list[1:]|select()|map('from_yaml')|combine }}"
  - name: collect domain information for IPA2DEMO.TEST
    shell: |
      echo Secret123 | kinit admin
      ipa idrange-show IPA2DEMO.TEST_id_range --raw && \
      ipa trustconfig-show --raw && \
      (ipa dnsrecord-show ipa2demo.test m2 --raw | head -2)
    delegate_to: m2.ipa2demo.test
    register: "r2"
  - set_fact:
      r2_info: "{{ r2_info|d({})|combine({_key: _val}) }}"
    loop: "{{ r2.stdout_lines }}"
    vars:
      _list: "{{ item.split(':')|map('trim') }}"
      _key: "{{ _list.0}}"
      _val: "{{ _list[1:]|select()|map('from_yaml')|combine }}"
  - name: Create DNS zone forwarder for ipa2demo.test
    shell: |
      echo Secret123 | kinit admin
      ipa dnsforwardzone-add ipa2demo.test --forwarder {{r2_info.arecord}}
    delegate_to: m1.ipa1demo.test
  - name: Create DNS zone forwarder for ipa1demo.test
    shell: |
      echo Secret123 | kinit admin
      ipa dnsforwardzone-add ipa1demo.test --forwarder {{r1_info.arecord}}
    delegate_to: m2.ipa2demo.test
  - name: Establish trust between IPA1DEMO.TEST and IPA2DEMO.TEST
    shell: |
      echo Secret123 | kinit admin
      echo Secret123 | ipa trust-add --type=ipa {{r2_info.cn}} \
                                     --admin "admin@{{r2_info.cn|upper}}" \
                                     --password --two-way=true \
                                     --range-type=ipa-ad-trust-posix
    delegate_to: m1.ipa1demo.test
  - name: create POSIX ID range for IPA1DEMO.TEST trust on IPA2DEMO.TEST
    shell: |
      echo Secret123 | kinit admin
      ipa idrange-add {{r1_info.cn|upper}}_id_range \
                      --dom-sid {{r1_info.ipantsecurityidentifier}} \
                      --type=ipa-ad-trust-posix \
                      --base-id {{r1_info.ipabaseid}} \
                      --range-size {{r1_info.ipaidrangesize}}
      # fix up ipaPartnerTrustType in LDAP object
      # we have 'ipa' bidirectional trust, e.g. 2 << 4 | 3 = 35
      ipa trust-mod {{r1_info.cn}} \
                    --addattr objectclass=ipatrustobject \
                    --addattr ipapartnertrusttype=35
    delegate_to: m2.ipa2demo.test
  - name: clean up and restart SSSD on IPA1DEMO side
    shell: |
      sssctl cache-remove -ops
      sssctl logs-remove -d
      systemctl restart sssd
    delegate_to: m1.ipa1demo.test
  - name: clean up and restart SSSD on IPA2DEMO side
    shell: |
      sssctl cache-remove -ops
      sssctl logs-remove -d
      systemctl restart sssd
    delegate_to: m2.ipa2demo.test
  - name: test resolution of trusted users on IPA1DEMO
    shell: |
      hostname -f
      getent passwd admin@ipa2demo.test
      getent group admins@ipa2demo.test
    delegate_to: m1.ipa1demo.test
    register: "ipa1demo_test"
  - name: resolution of trusted users on IPA1DEMO
    debug: var=ipa1demo_test.stdout_lines
  - name: test resolution of trusted users on IPA2DEMO
    shell: |
      hostname -f
      getent passwd admin@ipa1demo.test
      getent group admins@ipa1demo.test
    delegate_to: m2.ipa2demo.test
    register: "ipa2demo_test"
  - name: resolution of trusted users on IPA2DEMO
    debug: var=ipa2demo_test.stdout_lines
